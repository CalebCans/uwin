CAP=$1 TMP=t$$ OUT=setkeymap.c

trap "status=\$?; rm -f $TMP.*; exit \$status" 0 1 2

grep KEY_ $CAP > $TMP.c

cat > $TMP.CC <<'!'
#include	"termhdr.h"
/*
**	Make function key table
*/
#define MAX_KEY	200
int setkeymap()
{
	reg int		*vp;
	reg char	*kp, **kpp, **ekp;
	char		*key[MAX_KEY];
	int		val[MAX_KEY];

	/* see if it's already been done */
	if(_delkey && !_keymap)
		return ERR;
	if(_keymap)
		return OK;

	ekp = &(key[0]); vp = &(val[0]);
/*---FUNCTIONKEY---*/

	for(kpp = &(key[0]), vp = &(val[0]); kpp < ekp; ++kpp, ++vp)
	{
		kp = *kpp;
		if(kp && *kp && *kp != '\n' && *kp != '\b')
			_addkey(kp,NIL(char*),*vp,FALSE,FALSE);
	}

	return _keymap ? OK : ERR;
}
!

ed - <<!
E $TMP.c
g/^[a-z0-9A-Z_]*,	*"/s//	*ekp++ = T_/
g/".*	K/s//; *vp++ = K/
g/, 0.*/s//;/
w
E $TMP.CC
/---FUNCTIONKEY---/
.r $TMP.c
w $TMP.c
q
!

cmp -s $TMP.c $OUT || mv $TMP.c $OUT

_BSDCOMPAT == 1
CCFLAGS = -O
VERSION = 6.07
BSDWAIT == 1

SHSRC =	sh.c sh.dir.c sh.dol.c sh.err.c sh.exec.c sh.char.c sh.exp.c \
	sh.func.c sh.glob.c sh.hist.c sh.init.c sh.lex.c sh.misc.c \
	sh.parse.c sh.print.c sh.proc.c sh.sem.c sh.set.c sh.time.c \
	glob.c mi.termios.c ma.setp.c vms.termcap.c

TWSRC = tw.decls.h tw.h tw.help.c tw.init.c tw.parse.c tw.spell.c \
	tw.comp.c

EDSRC = ed.chared.c ed.decls.h ed.defns.c ed.init.c ed.inputl.c \
	ed.refresh.c ed.screen.c ed.xmap.c ed.term.c

TCSRC = tc.alloc.c tc.bind.c tc.const.c tc.decls.h tc.disc.c \
	tc.func.c tc.os.c tc.os.h tc.printf.c tc.prompt.c \
	tc.sched.c tc.sig.c tc.sig.h tc.str.c sh.types.h tc.vers.c tc.who.c

tcsh::	config.h $(SHSRC) $(TWSRC) $(EDSRC) $(TCSRC) tc.defs.c -lcurses tcsh.1
csh :LINK:	tcsh
tcsh.1 :LINK:	tcsh.man

tc.const.h:	tc.const.c
	{
		print '/* Do not edit this file, make creates it. */'
		print '#ifndef _h_tc_const'
		print '#define _h_tc_const'
		$(CC) $(CCFLAGS) -E  -D_h_tc_const $(*) | $(GREP) 'Char STR' |
	 	 $(SED) -e 's/Char \([a-zA-Z0-9_]*\)\[\].*/extern Char \1[];/' |
		 $(SORT)
		print '#endif /* _h_tc_const */' 
	} > $(tmp).h
	if	$(CMP) -s $(tmp).h $(<)
	then	$(RM) $(tmp).h
	else	$(MV) $(tmp).h $(<)
	fi


ed.defns.h:	ed.defns.c
	{
		print '/* Do not edit this file, make creates it. */' 
		print '#ifndef _h_ed_defns'
		print '#define _h_ed_defns'
		$(GREP) '[FV]_' $(*) | grep '^#define'
		print  '#endif /* _h_ed_defns */' 
	} > $(tmp).h
	if	$(CMP) -s $(tmp).h $(<)
	then	$(RM) $(tmp).h
	else	$(MV) $(tmp).h $(<)
	fi

sh.err.h:	sh.err.c
	{
		print '/* Do not edit this file, make creates it. */'
		print '#ifndef _h_sh_err'
		print '#define _h_sh_err'
		$(GREP) 'ERR_' $(*) | $(GREP) '^#define' 
		print '#endif /* _h_sh_err */'
	} > $(tmp).h
	if	$(CMP) -s $(tmp).h $(<)
	then	$(RM) $(tmp).h
	else	$(MV) $(tmp).h $(<)
	fi


:: configure config.guess configure.in Makefile.in

:INSTALLDIR:	gethost
gethost::  gethost.c

tc.defs.c:	gethost host.defs
	{
		print "/* Do not edit this file, make creates it */"
		$(*)
	} > $(tmp).c
	if	$(CMP) -s $(tmp).c $(<)
	then	$(RM) $(tmp).c
	else	$(MV) $(tmp).c $(<)
	fi

::	Makefile.std Makefile.vms Makefile.in sh.file.c \
	Fixes MAKEDIFFS MAKESHAR NewThings README FAQ \
	WishList config_f.h eight-bit.me glob.3 patchlevel.h \
	pathnames.h tcsh.man Ported src.desc Imakefile imake.config \
	README.imake complete.tcsh vmsreadme.txt termcap.vms snames.h \
	host.defs gethost.c tcsh.man2html configure.in nls config \
	mi.varargs.h mi.wait.h

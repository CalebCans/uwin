set	config

hdr	alloca,arpa.nameser,dirent,errno,fcntl,float,glob,libintl
hdr	malloc,memory,ndir,paths,stdarg,stdlib,string,termio,termios
hdr	unistd,utmp,utmpx,vfork,vis,vmsdir
hdr	netinet.in_systm,netinet.ip netinet/in.h

sys	cdefs,dir,file,filio,ioctl_compat,msgbuf,ndir,param,ptyvar,select
sys	sockio,stream,sysmacros,time,tty,types,utsname,wait

lib	__PROGNAME,alloca,bcopy,bzero,cfsetspeed,cgetent,crypt,flock
lib	fpathconf,ftruncate,gettimeofday,getutxline,getuxline,killpg
lib	memcpy,memmove,memset,setegid,seteuid,setlinebuf,setregid
lib	setresgid,setresuid,setreuid,setsid,setutent,sigaction,sigvec
lib	strchr,strcoll,strdup,strndup,strnlen,tcgetattr,uname,utime,utimes
lib	utmpname,vsnprintf,wait3,waitpid

lib	snprintf,vsnprintf stdio.h
lib	h_errno netdb.h
lib	sys_errlist stdio.h errno.h
lib	setpgid = setpgrp
lib	vfork = fork

npt	crypt unistd.h
npt	environ unistd.h stdlib.h
npt	errno,sys_errlist stdio.h errno.h
npt	fclose,pclose stdio.h
npt	getpass,getusershell stdlib.h
npt	h_errlist,h_errno,hstrerror,H_ERRLIST netdb.h
npt	htons sys/types.h sys/param.h netinet/in.h
npt	strchr,strerror stdlib.h string.h

mem	sockaddr.sin_len sys/types.h netinet/in.h
mem	stat.st_blksize sys/stat.h
mem	stat.st_mtime_usec sys/stat.h
mem	utmp.ut_host,utmp.ut_tv,utmp.ut_type utmp.h
mem	utmpx.ut_tv utmpx.h

typ	pid_t = int
typ	sig_t signal.h
typ	sig_atomic_t signal.h = int
typ	sigset_t signal.h = unsigned long

key	const =

mac	EWOULDBLOCK errno.h = -111
mac	SEEK_SET unistd.h = 0
mac	SEEK_CUR unistd.h = 1
mac	SEEK_END unistd.h = 2

tst	HAVE_OSOCKADDR_H note{ <osockaddr.h> defines struct osockaddr }end compile{
		#include <sys/types.h>
		#include <osockaddr.h>
		struct osockaddr tst;
	}end no{
		#define osockaddr	sockaddr
	}end

tst	TIME_WITH_SYS_TIME note{ <sys/time.h> and <time.h> ok together }end compile{
		#include <sys/time.h>
		#include <time.h>
	}end

tst	note{ signal handler return type }end compile{
		#include <sys/types.h>
		#include <signal.h>
		#undef signal
		extern void (*signal())();
	}end yes{
		#define RETSIGTYPE void
	}end no{
		#define RETSIGTYPE int
	}end

exp	STDC_HEADERS	HAVE_FLOAT_H&HAVE_STDARG_H&HAVE_STDLIB_H&HAVE_STRING_H

exp	HAVE_SOCKADDR_IN_SIN_LEN	HAVE_SIN_LEN_IN_SOCKADDR_IN
exp	HAVE_ST_BLKSIZE			HAVE_ST_BLKSIZE_IN_STAT
exp	HAVE_STAT_ST_MTIME_USEC		HAVE_ST_MTIME_USEC_IN_STAT
exp	HAVE_UTMP_UT_HOST		HAVE_UT_HOST_IN_UTMP
exp	HAVE_UTMP_UT_TV			HAVE_UT_TV_IN_UTMP
exp	HAVE_UTMP_UT_TYPE		HAVE_UT_TYPE_IN_UTMP
exp	HAVE_UTMPX_UT_TV		HAVE_UT_TV_IN_UTMPX

cat{

#ifndef HAVE_BCOPY
#	define bcopy(f,t,z)	memmove(t,f,z)
#endif
#ifndef HAVE_BZERO
#	define bzero(x,z)	memset(x,0,z)
#endif
#ifndef HAVE_MEMCPY
#	define memcpy		memmove
#endif

#ifndef HAVE_SETEGID
#	ifdef HAVE_SETREGID
#		define setegid(gid)	setregid(-1, (gid))
#	else
#		ifdef HAVE_SETRESGID
#			define setegid(gid) setresgid(-1, (gid), -1)
#		endif
#	endif
#endif

#ifndef HAVE_SETEUID
#	ifdef HAVE_SETREUID
#		define seteuid(uid)	setreuid(-1, (uid))
#	else
#		ifdef HAVE_SETRESUID
#			define seteuid(uid) setresuid(-1, (uid), -1)
#		endif
#	endif
#endif

#ifndef HAVE_STRCHR_DECL
extern char *strchr __P ((char *str, int ch));
extern char *strrchr __P ((char *str, int ch));
#endif
#ifndef HAVE_STRCHR
#define strchr index
#define strrchr rindex
#endif

#ifndef HAVE_VSNPRINTF
#include <sys/types.h>
#if defined(HAVE_STDARG_H) && defined(__STDC__) && __STDC__
#include <stdarg.h>
#else
#include <varargs.h>
#endif
extern int vsnprintf __P ((char *, size_t, const char *, va_list));
#endif

#ifdef HAVE_SYS_PARAM_H
#include <sys/types.h>
#include <sys/param.h>
#endif
/* Get or fake the disk device blocksize.
   Usually defined by sys/param.h (if at all).  */
#if !defined(DEV_BSIZE) && defined(BSIZE)
#define DEV_BSIZE BSIZE
#endif
#if !defined(DEV_BSIZE) && defined(BBSIZE) /* SGI */
#define DEV_BSIZE BBSIZE
#endif
#ifndef DEV_BSIZE
#define DEV_BSIZE 4096
#endif

/* Extract or fake data from a `struct stat'.
   ST_BLKSIZE: Optimal I/O blocksize for the file, in bytes. */
#ifndef HAVE_ST_BLKSIZE
# define ST_BLKSIZE(statbuf) DEV_BSIZE
#else /* HAVE_ST_BLKSIZE */
/* Some systems, like Sequents, return st_blksize of 0 on pipes. */
# define ST_BLKSIZE(statbuf) ((statbuf).st_blksize > 0 \
                              ? (statbuf).st_blksize : DEV_BSIZE)
#endif /* HAVE_ST_BLKSIZE */

#define HAVE_GETPASS_DECL	1
#ifndef HAVE_GETPASS_DECL
extern char *getpass __P((const char *));
#endif

#define HAVE_HSTRERROR_DECL	1
#ifndef HAVE_HSTRERROR_DECL
extern const char *hstrerror __P ((int));
#endif

#define HAVE_STRERROR_DECL	1
#ifndef HAVE_STRERROR_DECL
extern const char *strerror __P ((int));
#endif

#ifndef ARG_UNUSED
#   define ARG_UNUSED
#endif

#include <confpaths.h>

}end
